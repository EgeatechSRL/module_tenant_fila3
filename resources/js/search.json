[[{"l":"module_tenant","p":["Questo modulo può rendere consapevole un tenant dell'app Laravel. La filosofia di questo pacchetto è che dovrebbe fornire solo lo stretto necessario per consentire la multitenancy"]},{"l":"Aggiungere Modulo nella base del progetto","p":["Dentro la cartella laravel/Modules"]},{"l":"Verificare che il modulo sia attivo","p":["in caso abilitarlo"]},{"l":"Eseguire le migrazioni"}],[{"l":"About","p":["The Laravel module_tenant is a package that allows developers to easily set up multi-tenancy in their Laravel applications.","To install the package, you can use Composer by running the following command:","Copy code composer require laraxot/module_tenant Once the package is installed, you can register the service provider in your config/app.php file by adding the following line to the providers array:","Copy code Laraxot\\ModuleTenant\\TenantServiceProvider::class, To publish the package's configuration file, you can run the following command:","Copy code php artisan vendor:publish --provider=\"Laraxot\\ModuleTenant\\TenantServiceProvider\" This will create a config/module_tenant.php file where you can customize the package's settings.","To create a tenant, you can use the laraxot:tenant Artisan command. For example, to create a tenant with the name acme, you can run the following command:","Copy code php artisan laraxot:tenant acme This will create a new database and run all of the necessary migrations to set up the tenant's database schema.","To switch to a tenant's database, you can use the tenant helper function. For example, to switch to the acme tenant's database, you can use the following code:","Copy code tenant('acme'); From this point, all database queries will be run against the acme tenant's database. To switch back to the default database, you can use the resetTenant helper function like this:","Copy code resetTenant(); The module_tenant package makes it easy to set up and manage multi-tenancy in your Laravel applications. For more detailed information, please see the package's README file on GitHub."]}],[{"l":"Tutorial video","p":["https://www.youtube.com/watch?v=_eyz7rvwLTQ"]}],[{"l":"Activitylog"}],[{"l":"App"}],[{"l":"Auth"}],[{"l":"Database"}],[{"l":"Event sourcing"}],[{"l":"Exchanges"}],[{"l":"Filesystems"}],[{"l":"Metatag"}],[{"l":"Modules statuses","p":["{\"Notify\": true,\"Ptv\": true,\"Tenant\": true,\"UI\": true,\"User\": true,\"Xot\": true,\"Incentivi\": true}"]}],[{"l":"Morph map"}],[{"l":"Passport"}],[{"l":"Permission"}],[{"l":"Services"}],[{"l":"Social"}],[{"l":"Xra"}],[{"i":"#","p":["About Tenant"]},{"l":"module_tenant","p":["// Crea un nuovo tenant$tenant = Tenant::create(['name' => 'Acme Corp','slug' => 'acme-corp',// Altri campi...]);","// Crea una nuova connessione del database per il tenant$tenant->connections()->create(['database' => 'acme_corp','username' => 'acme_user','password' => 'acme_password',// Altri campi...]); Il modulo offre anche altre funzionalità come:","app/Models/Tenant.php: il modello del tenant, che rappresenta un singolo tenant nell'applicazione. app/Models/TenantConnection.php: il modello delle connessioni del tenant, che rappresenta una connessione del database per un tenant specifico. database/migrations/_ create_tenants_table.php: una migrazione per creare la tabella dei tenant nella base dati. database/migrations/_ create_tenant_connections_table.php: una migrazione per creare la tabella delle connessioni del tenant nella base dati. Puoi quindi utilizzare i modelli per gestire i tenant nell'applicazione. Ad esempio, puoi creare un nuovo tenant come segue:","Ciò creerà un file config/module_tenant.php dove è possibile personalizzare le impostazioni del pacchetto.","Ciò creerà un nuovo database e eseguirà tutte le migrazioni necessarie per configurare lo schema del database del tenant.","Copy code use App\\Models\\Tenant;","Da questo punto in poi, tutte le query verranno eseguite sul database tenant acme. Per tornare al database predefinito, puoi utilizzare la funzione di","Il modulo Laravel module_tenant è una libreria per la gestione del multitenant in Laravel. Offre una serie di funzionalità che facilitano la creazione e la gestione di un'applicazione multitenant in Laravel.","Il pacchetto Laravel module_tenant è un pacchetto che consente agli sviluppatori di configurare facilmente il multitenant nei loro applicazioni Laravel.","Per creare un tenant, puoi utilizzare il comando Artisan laraxot:tenant. Ad esempio, per creare un tenant con il nome acme, puoi eseguire il seguente comando:","Per installare il modulo, puoi utilizzare Composer:","Per installare il pacchetto, puoi utilizzare Composer eseguendo il seguente comando:","Per passare a un database tenant, puoi utilizzare la funzione di supporto tenant. Ad esempio, per passare al database tenant acme, puoi utilizzare il seguente codice:","Per pubblicare il file di configurazione del pacchetto, puoi eseguire il seguente comando:","Questo comando genererà i seguenti file:","Un middleware per gestire automaticamente il routing del tenant basato sull'URL. Una facade per facilmente accedere al tenant corrente nell'applicazione. Una classe TenantScope per facilmente applicare il tenant corrente come scopo globale per le query Eloquent. Per ulteriori informazioni su come utilizzare il modulo, consulta la documentazione ufficiale sul sito web del suo autore o sulla pagina GitHub del progetto.","Una volta installato il pacchetto, puoi registrare il provider di servizi nel file config/app.php aggiungendo la seguente riga all'array providers:","Una volta installato, puoi utilizzare il comando Artisan make:tenant per generare i modelli e i migrazioni per il multitenant:"]}],[{"i":"#","p":["Configurazione progetti"]},{"l":"Configurazione progetti","p":["Con lo stessa struttura è possibile avere varie configurazioni per gestire più progetti."]},{"l":"Cartella config","p":["Dentro la cartella laravel\\config ci sono tutte le configurazioni, organizzate in base all'url utilizzato.","L'organizzazione delle cartelle segue l'ordine del dominio, esempio:","se volessi configurare il dominio https://mio_dominio.com/, dentro la cartella laravel\\config dovrei creare:","una cartella nominata com,","dentro la cartella com un altra cartella nominata mio_dominio.","quindi tutti i file di configurazione che interessano al progetto che verrà pubblicato a dominio https://mio_dominio.com/ si troveranno dentro la cartella laravel/config/com/mio_dominio\""]}],[{"i":"#","p":["Custom 404 pages with Jigsaw docs starter template"]},{"l":"Custom 404 Page","p":["This starter template includes a custom 404 Not Found error page, located at /source/404.blade.php. To preview the 404 page, you can visit /404 in your browser.","Depending on where your site is hosted, you may need to configure your server to use the custom 404 page. For more details, visit the Jigsaw documentation about configuring a custom 404 page."]}],[{"i":"#","p":["Il file xra.php"]},{"i":"il-file-xra","l":"Il file xra.php","p":["Il file xra è uno dei file fondamentali. Ogni configurazione ne deve avere uno.","Esempio:","il parametro main_module determina quale sia il modulo principale che il progetto utilizza.","Il parametro adm_theme determina quale tra i temi installati nella base, nella cartella laravel/Themes, viene utilizzata per il backand/amministrazione.","Il parametro pub_theme determina quale tra i temi installati nella base, viene utilizzata per il frontend.","Il parametro primary_lang determina la lingua di default utilizzata nel progetto."]},{"l":"Parametro home","p":["Un altro parametro che si può inserire nel file xra.php è 'home':","esso indicherà che per la home del frontend verrà utilizzata la pagina blade laravel\\Themes\\pub_theme\\Resources\\views\\home\\template\\homepage.blade.php.","Se non specificata, per la homepage del frontend verrà utilizzata la blade laravel\\Themes\\pub_theme\\Resources\\views\\home\\01.blade.php."]},{"l":"Parametro adm_home","p":["Come il parametro 'home', anche il parametro 'adm_home' indica la blade che verrà utilizzata per la homepage dell'amministrazione.","Di default viene utilizzata laravel\\Themes\\adm_theme\\Resources\\views\\admin\\dashboard\\01.blade.php, blade importante perchè mette a disposizione l'utilizzo di blade personalizzate per ogni modulo utilizzato.","nome_modulo::admin.dashboard.item è la blade che dovrà essere creata per ogni modulo."]}],[{"i":"#","p":["links"]},{"l":"links links","p":["..."]}],[{"i":"#","p":["Modulo Tenant"]},{"l":"Modulo Tenant","p":["Questo modulo è dedicato alla gestione delle configurazioni dei vari domini utilizzati nella base.","Il modulo \"module_tenant\" è un pacchetto per Laravel che fornisce funzionalità per la gestione del multitenant in un'applicazione Laravel. Il multitenant consiste nella possibilità di gestire più tenant, ossia più clienti o utenti, all'interno di un'unica applicazione.","Per utilizzare il modulo, è necessario installarlo tramite Composer con il comando composer require laraxot/module_tenant. Una volta installato, il modulo può essere utilizzato nell'applicazione Laravel tramite il seguente codice:","Copy code use Laraxot\\ModuleTenant\\Facades\\ModuleTenant; Il modulo include diverse funzionalità per la gestione del multitenant, come ad esempio il metodo addTenant() per aggiungere un nuovo tenant all'applicazione, o il metodo setCurrentTenant() per impostare il tenant corrente su cui verranno eseguite le operazioni.","Per utilizzare il modulo, è necessario prima configurare l'applicazione per supportare il multitenant. La configurazione può essere eseguita tramite il comando Artisan php artisan tenant:install, che creerà le tabelle del database necessarie per gestire i tenant e aggiungerà le route e i controller per la gestione dei tenant all'applicazione."]}],[{"l":"Phpunit","p":["https://iwasherefirst2.medium.com/how-to-test-eloquent-models-in-a-laravel-package-3dbf30b44a19"]}],[{"l":"Changelog","p":["All notable changes to :package_name will be documented in this file."]},{"i":"100---202x-xx-xx","l":"1.0.0 - 202X-XX-XX","p":["initial release"]}],[{"l":"LICENSE","p":["The MIT License (MIT)","Copyright (c) :vendor_name author@domain.com","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."]}]]